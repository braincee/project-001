import React, { useEffect, useState } from 'react'
import Head from 'next/head';
import { Input, Button, Image } from '@nextui-org/react';
import { ShareIcon } from './components/ShareIcon';
import { useRouter } from 'next/router';
import Link from 'next/link';

export default function Home() {
  const [urlId, setUrlId] = useState("");
  const [urlIds, setUrlIds] = useState([]);
  const [isvalidated, setIsvalidated] = useState(true);
  const router = useRouter();
  const [test, setTest] = useState(null);

  const isValidHttpUrl = (string) => { 
    try {
      const newUrl = new URL(string);
      //! So if I don't copy a link with www. at the beginning it will not work?
      //! Learn how to take in account all the possible cases.
      return newUrl.protocol === 'https:' && newUrl.host === 'www.youtube.com' ;
    } catch (err) {
      return false;
    }
  }

  const handleUrlInput = (e) => {   
    if (isValidHttpUrl(e.target.value)) {
      setUrlId(e.target.value);  
      setIsvalidated(true); 
    } else {
      setIsvalidated(false);
    }
  }

  const updateurlIds = async () => {
    if (urlId !== '' && isvalidated) {
      let videoId = urlId.split('v=')[1];   
      setUrlIds([...urlIds, videoId]);
    }
    setUrlId('');
  }

  const handleShare = () => {
    let lists = '';
    urlIds.forEach((url, index) => {
      if (index + 1 === urlIds.length) {
        lists = lists.concat(`${url}`)
      } else {
        lists = lists.concat(`${url},`)
      }
    });
    
    router.push(`/list/?list=${lists}`);
  }

  return (
    <>
      <Head>
        <title>YT Playlist Creator & Sharer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mt-4 mb-[50px] flex flex-col">
        <h1 className="text-center text-[30px]">YT Playlist Creator and Sharer</h1>
        <div className="flex justify-center items-center mt-[50px] gap-4 min-h-auto">
          {/* //! I cannot see what I type. I should be able to see what I type even if it is wrong (= invalid). I typed "a" (the letter "a") and I cannot see it. */}
          <Input  
            onChange={handleUrlInput}
            className="w-3/5 !placeholder:text-slate-400 placeholder:text-[20px]" 
            placeholder="Add YouTube Url"
            aria-labelledby="none"
            value={urlId}
          />
          <Button color="primary" size="xl" onPress={updateurlIds}>Add URL</Button>
          <Button color="success" className=" text-dark flex justify-between" size="xl" onPress={handleShare} endIcon={<ShareIcon />} >Share</Button>
        </div>
         {/* //! Learn how to use this syntax instead of "? :" if you only have one option and else null. */}
        {/* //! Replace everywhere (= all pages) where it helps. */}
        { isvalidated === false ? (
          <span className="text-danger text-[24px] px-[120px]">Invalid URL</span>
        ) : ""}
        <div className="mt-[20px] px-[20px] lg:px-[100px] flex flex-col gap-[20px]">
          { urlIds.length > 0 ? urlIds.map((url) => (
            <div key={url} className="video">
              <Link className="card-link" target="_blank" href={`https://youtube.com/embed/${url}`}></Link>
              <div className='card'>
                {/* //! As I said, remove the iFrame and replace with metadata. */}
                  <Image src={`http://img.youtube.com/vi/${url}/sddefault.jpg`} />
              </div>
            </div>
          )): ''}
        </div>
      </main>
    </>
  )
}
