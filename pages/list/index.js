import TableBuilder from '@/components/TableBuilder';
import VideoCard from '@/components/VideoCard';
import { Button, Table, TableBody, TableRow, TableCell, TableHeader, TableColumn, Avatar, Image } from '@nextui-org/react';
import Head from "next/head";
import { useState } from 'react';
import { FaTrashAlt } from 'react-icons/fa';

export const getServerSideProps = async (context) => {
  const { list, title, description, channelTitle, publishedAt } = context.query;
  let urlData = [];

  if (list && list.indexOf(",") == -1) {
    urlData.push({
      number: 1,
      id: list,
      title: title || "",
      description: description || "",
      channelTitle: channelTitle || "",
      publishedAt: new Date(publishedAt).toUTCString() || "",
    });
  } else {
    list && list.split(",").map((id, index) => {
      urlData.push({
        number: index + 1,
        id,
        title: title && title.split(",")[index] || "",
        description: description && description.split(",")[index] || "",
        channelTitle: channelTitle && channelTitle.split(",")[index] || "",
        publishedAt: publishedAt && new Date(publishedAt.split(",")[index]).toUTCString() || "",
      })   
    });
  }

  return { props: { urlData } };
};


export default function List({ urlData }) {
  const [videoData, setVideoData] = useState(urlData);
  
  const decodeHTML = (code) => {
    if (typeof window !== "undefined") {
      let text = document.createElement("textarea");
      text.innerHTML = code;
      return text.value
    }
  }

  const deleteFromList = (index) => {
    setVideoData((items) => {
      const newItems = items.filter((item) => item.number != index);
      // setNumber(newItems.length);
      return newItems;
     });
     setVideoData((items) => {
       const newItems = items.map((item, index) => {
         return {
           ...item,
           number: index + 1
         }
       });
       return newItems;
     });
  }; 

  return (
    <>
      <Head>
        <title>YT Playlist Creator & Sharer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className="mt-4 mb-[50px] flex flex-col">
        <h1 className="text-center px-3 md:px-0 text-3xl">My Playlist</h1>
        {videoData.length > 0 ? (
        <>
          <TableBuilder urlData={videoData} decodeHTML={decodeHTML} deleteFromList={deleteFromList} />
        <div className="flex flex-col gap-3 p-2 my-8 md:hidden">
          { videoData.map((item) => (
            <VideoCard key={item.number} item={item} decodeHTML={decodeHTML} deleteFromList={deleteFromList} />
          ))}
        </div>
        </>
        ) : 
        (<p className="text-center text-gray-500 text-lg">No available playlist</p>)
        }
      </main>
    </>
  );
}
